name: Build Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: # Enables manual runs for GHA debugging

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            r-version: '4.4.3'
          - os: macos-latest
            r-version: '4.4.3'
            architecture: x86_64
          - os: macos-latest
            r-version: '4.4.3'
            architecture: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libomp
          brew install gcc

      - name: Install R package dependencies
        run: Rscript -e 'install.packages(c("devtools", "remotes", "RcppArmadillo", "minqa", "matrixStats", "numDeriv", "mvtnorm"))'

      - name: Clean previous builds
        run: Rscript -e 'devtools::clean_dll()'

      - name: Build package (macOS ARM64)
        if: matrix.os == 'macos-latest' && matrix.architecture == 'arm64'
        run: |
          export ARCHFLAGS="-arch arm64"
          Rscript -e 'devtools::build(binary = TRUE, path = "../", args = c("--no-multiarch","--preclean","--clean","--verbose"))'

      - name: Build package (macOS x86_64)
        if: matrix.os == 'macos-latest' && matrix.architecture == 'x86_64'
        run: |
          export ARCHFLAGS="-arch x86_64"
          Rscript -e 'devtools::build(binary = TRUE, path = "../", args = c("--no-multiarch","--preclean","--clean","--verbose"))'

      - name: Build package (Windows)
        if: matrix.os == 'windows-latest'
        run: Rscript -e 'devtools::build(binary = TRUE, path = "D:/a/multinomialTS/", args = c("--no-multiarch","--preclean","--clean","--verbose"))'

      - name: List all files after build
        run: ls -R

      - name: Upload Release Asset (macOS ARM64)
        if: matrix.os == 'macos-latest' && matrix.architecture == 'arm64'
        uses: actions/upload-artifact@v4
        with:
          name: multinomialTS-macOS-arm64
          path: /Users/runner/work/multinomialTS/multinomialTS_*.tgz

      - name: Upload Release Asset (macOS x86_64)
        if: matrix.os == 'macos-latest' && matrix.architecture == 'x86_64'
        uses: actions/upload-artifact@v4
        with:
          name: multinomialTS-macOS-x86_64
          path: /Users/runner/work/multinomialTS/multinomialTS_*.tgz

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: multinomialTS-Windows
          path: D:/a/multinomialTS/multinomialTS_*.zip


  release:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after the build job

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: /home/runner/work/multinomialTS/
      - name: Show artifacts
        run: find /home/runner/work/multinomialTS/

      - name: List all downloaded files
        run: ls -R /home/runner/work/multinomialTS/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            /home/runner/work/multinomialTS/multinomialTS-macOS-arm64/*.tgz
            /home/runner/work/multinomialTS/multinomialTS-macOS-x86_64/*.tgz
            /home/runner/work/multinomialTS/multinomialTS-Windows/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
