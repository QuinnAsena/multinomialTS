// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mnTS_ml_cpp
double mnTS_ml_cpp(arma::vec par, arma::vec par_fixed, arma::mat Y, arma::mat X, arma::vec Tsample);
RcppExport SEXP _multinomialTS_mnTS_ml_cpp(SEXP parSEXP, SEXP par_fixedSEXP, SEXP YSEXP, SEXP XSEXP, SEXP TsampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par_fixed(par_fixedSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tsample(TsampleSEXP);
    rcpp_result_gen = Rcpp::wrap(mnTS_ml_cpp(par, par_fixed, Y, X, Tsample));
    return rcpp_result_gen;
END_RCPP
}
// mnTS_ml_cpp_list
Rcpp::List mnTS_ml_cpp_list(arma::vec par, arma::vec par_fixed, arma::mat Y, arma::mat X, arma::vec Tsample);
RcppExport SEXP _multinomialTS_mnTS_ml_cpp_list(SEXP parSEXP, SEXP par_fixedSEXP, SEXP YSEXP, SEXP XSEXP, SEXP TsampleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type par_fixed(par_fixedSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tsample(TsampleSEXP);
    rcpp_result_gen = Rcpp::wrap(mnTS_ml_cpp_list(par, par_fixed, Y, X, Tsample));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_multinomialTS_mnTS_ml_cpp", (DL_FUNC) &_multinomialTS_mnTS_ml_cpp, 5},
    {"_multinomialTS_mnTS_ml_cpp_list", (DL_FUNC) &_multinomialTS_mnTS_ml_cpp_list, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_multinomialTS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
